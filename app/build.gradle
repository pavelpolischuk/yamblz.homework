apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply from: '../code_quality_tools/jacoco.gradle'

def keystorePropertiesFile = project.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.gcteam.yamblz.homework"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        temp {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'

            // Enables code coverage with Jacoco only for instrumentation tests.
            // Coverage for JVM tests done by code_quality_tools/jacoco.gradle.
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.temp
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles fileTree('proguard').asList().toArray()
        }

        buildTypes.each {
            it.buildConfigField "String", "OPEN_WEATHER_MAP_API_KEY", keystoreProperties["OPEN_WEATHER_MAP_API_KEY"]
            it.buildConfigField "String", "GOOGLE_PLACES_API_KEY", keystoreProperties["GOOGLE_PLACES_API_KEY"]
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile libraries.junit
    androidTestCompile libraries.junit
    testCompile libraries.mockitoCore

    compile libraries.supportAppCompat
    compile libraries.supportPreferencev7
    compile libraries.supportPreferencev14
    compile libraries.supportDesign
    compile libraries.supportConstraintLayout

    compile libraries.evernoteJob

    compile libraries.gcm

    compile libraries.retrofit
    compile libraries.retrofitRx2Adapter
    compile libraries.retrofitGsonConverter

    compile libraries.okHttpLoggingInterceptor

    compile libraries.rxAndroid
    compile libraries.rxJava
    compile libraries.rxBindingAppCompat

    compile libraries.butterknife
    annotationProcessor libraries.butterknifeCompiler

    compile libraries.dagger
    annotationProcessor libraries.daggerCompiler
    provided libraries.daggerAnnotations

    testCompile libraries.roboelectric

    androidTestCompile(libraries.espressoCore) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile libraries.espressoContrib
    androidTestCompile libraries.testRunner

    compile libraries.stetho

    compile libraries.room
    annotationProcessor libraries.roomCompiler
    compile libraries.roomRx
    compile libraries.timber

    testCompile libraries.assertJ

    testCompile libraries.randomBeans
}